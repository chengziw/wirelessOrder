/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.wireless.web.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.wireless.entity.Ordertbl;
import com.wireless.web.forms.OrderForm;
import com.wirelsee.web.service.OrderService;

/** 
 * MyEclipse Struts
 * Creation date: 09-22-2013
 * 
 * XDoclet definition:
 * @struts.action path="/order" name="orderForm" parameter="flag" scope="request" validate="true"
 * @struts.action-forward name="orderEdit" path="/WEB-INF/views/order/orderEdit.jsp"
 * @struts.action-forward name="order" path="/WEB-INF/views/order/order.jsp"
 * @struts.action-forward name="orderAdd" path="/WEB-INF/views/order/orderAdd.jsp"
 */
public class OrderAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	private OrderService orderService;
	
	public OrderService getOrderService() {
		return orderService;
	}
	public void setOrderService(OrderService orderService) {
		this.orderService = orderService;
	}
	public ActionForward order(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;// TODO Auto-generated method stub
		 
		// 判断用户所点击的当前页数
		 //若无点击，则默认第一页
		 
		String s_pageNow=request.getParameter("pageNow"); 
		int pageNow=1;
		if(s_pageNow!=null){
			pageNow=Integer.parseInt(s_pageNow);
		}
		//设置一页5条数据
		int pageCount = orderService.getPageCount(5);
		// 判断是否存在前一页后一页
		String pre = "no";
		String next = "no";
		if (pageNow != 1) {
			pre = "yes";
		}
		if (pageNow != pageCount) {
			next = "yes";
		}
		request.setAttribute("pNow", pageNow);
		request.setAttribute("pre", pre);
		request.setAttribute("next", next);
		//向数据库查询order
		request.setAttribute("orderlist",orderService.getOrderList(pageNow, 5));
		request.setAttribute("pageCount", pageCount);

	
		return mapping.findForward("order");
	}
	//添加页面
	public ActionForward orderAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;// TODO Auto-generated method stub
		//把tablelist放入进行选择
		request.setAttribute("tablelist", orderService.getTableList());
		request.setAttribute("menulist", orderService.getMenuList());
		return mapping.findForward("orderAdd");
	}
	//编辑页面
	public ActionForward orderEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;// TODO Auto-generated method stub
		return null;
	}
	//预览页面
	public ActionForward orderPre(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;// TODO Auto-generated method stub
		String oid=request.getParameter("oid");
		request.setAttribute("order", orderService.getOrder(Integer.parseInt(oid)));
		return mapping.findForward("orderPre");
	}
	//添加请求
	public ActionForward addOrder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;// TODO Auto-generated method stub
		return null;
	}
	//更改请求
	public ActionForward updOrder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;// TODO Auto-generated method stub
		return null;
	}
	//删除请求
	public ActionForward delOrder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;// TODO Auto-generated method stub
		String delid=request.getParameter("delid");
		if(delid!=null){
			orderService.delOrder(Integer.parseInt(delid));
		}
		return order(mapping, orderForm, request, response);
	}
}
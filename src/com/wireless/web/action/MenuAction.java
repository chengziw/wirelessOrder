/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.wireless.web.action;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import com.wireless.entity.Menutbl;
import com.wireless.entity.Menutypetbl;
import com.wireless.web.forms.MenuForm;
import com.wirelsee.web.service.MenuService;


/** 
 * MyEclipse Struts
 * Creation date: 09-07-2013
 * 
 * XDoclet definition:
 * @struts.action parameter="flag" validate="true"
 */
public class MenuAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	private MenuService menuService;
	
	public MenuService getMenuService() {
		return menuService;
	}

	public void setMenuService(MenuService menuService) {
		this.menuService = menuService;
	}

	public ActionForward menu(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		/* 
		 * 判断用户所点击的当前页数
		 * 若无点击，则默认第一页
		 */
		String s_pageNow=request.getParameter("pageNow"); 
		int pageNow=1;
		if(s_pageNow!=null){
			pageNow=Integer.parseInt(s_pageNow);
		}
		//默认一页存放5条数据
		//获得总页数
		int pageCount=menuService.getPageCount(8);
		//判断是否存在前一页后一页
		String pre="no";
		String next="no";
		if(pageNow!=1){
			pre="yes";
		}
		if(pageNow!=pageCount){
			next="yes";
		}
		request.setAttribute("pNow", pageNow);
		request.setAttribute("pre", pre);
		request.setAttribute("next", next);
		//向数据库查询Table对象，放入req中
		request.setAttribute("menulist", menuService.getMenuList(pageNow, 8));
		request.setAttribute("pageCount", pageCount);
		return mapping.findForward("menu");
	}
	// 返回添加菜谱页面
	public ActionForward menuAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// 获得表单
		MenuForm menuForm=(MenuForm)form;
		request.setAttribute("menutypelist", menuService.getMenuTypeList());
		return mapping.findForward("menuAdd");
	}
	// 处理添加请求
	public ActionForward addMenu(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		MenuForm menuForm=(MenuForm)form;
		//获取菜谱外键的id
		Integer menuTypeId=Integer.parseInt(request.getParameter("menutype"));
//		System.out.println(menuTypeId);
		Menutypetbl menuType=menuService.getMenuType(menuTypeId);
		//封装表单数据
		Menutbl menu=new Menutbl();
		menu.setMenutypetbl(menuType);
		menu.setName(menuForm.getName());
		menu.setPrice(menuForm.getPrice());
		menu.setRemark(menuForm.getRemark());
		//获取图片
		FormFile photo=menuForm.getPhoto();
		//如图片不为空，则处理图片信息
		System.out.println("photo:"+photo);
		if(!photo.toString().equals("")){
			String filename = photo.getFileName(); // 文件名
			String newFilename=menuService.getNewFileName(filename);// 使用uuid值作为文件名，防止重复覆盖;
//				System.out.println("filename:::::::::::::::::"+filename);
				newFilename = menuService.getNewFileName(filename);// 使用uuid值作为文件名，防止重复覆盖
			
			int filesize = photo.getFileSize(); // 文件大小，可做上传大小限制
			String filetype = photo.getContentType(); // 文件类型，可做图片类型限制。最好不要通过后缀名判断，通过tomcat下web.xml查询
			// 上传图片
			InputStream is = null;
			OutputStream os = null;
			try {
				is = photo.getInputStream();
				String filepath="F:\\Program Files\\Java\\Myeclipse 10 new\\WirelessOrder\\WebRoot\\images";
				os = new FileOutputStream(filepath + "\\" + newFilename);
				int len = 0;
				byte[] bytes = new byte[1024];
				while ((len = is.read(bytes)) > 0) {
					// 读一点 写出到os一点
					os.write(bytes, 0, len);
				}

			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				try {
					is.close();
					os.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			// 随机生成uuid值作为图片名
			menu.setPic(newFilename);
		}
		if(menuService.addMenu(menu)){
			request.setAttribute("menuAdd", "yes");
			return menu(mapping, menuForm, request, response);
		}else{
			request.setAttribute("menuAdd", "no");
			return mapping.findForward("menuAdd");
		}
	}
	public ActionForward menuEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id=Integer.parseInt(request.getParameter("id"));
		Menutbl menu=menuService.getMenu(id);
		request.setAttribute("menu", menu);
		request.setAttribute("menutypelist", menuService.getMenuTypeList());
		return mapping.findForward("menuEdit");
	}
	public ActionForward menuPre(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id=Integer.parseInt(request.getParameter("id"));
		Menutbl menu=menuService.getMenu(id);
		request.setAttribute("menu", menu);
		request.setAttribute("menutypelist", menuService.getMenuTypeList());
		return mapping.findForward("menuPre");
	}
	public ActionForward delMenu(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String delid=request.getParameter("delid");
		if(delid!=null){
			menuService.delMenu(Integer.parseInt(delid));
		}
		return menu(mapping, form, request, response);
	}
	public ActionForward updMenu(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		MenuForm menuForm=(MenuForm)form;
		
		Integer menuTypeId=Integer.parseInt(request.getParameter("menutype"));
		System.out.println("menutypeid====="+menuTypeId);
		Menutypetbl menuType=menuService.getMenuType(menuTypeId);
		
		Menutbl menu=new Menutbl();
		menu.setId(menuForm.getId());
		menu.setName(menuForm.getName());
		menu.setPrice(menuForm.getPrice());
		menu.setRemark(menuForm.getRemark());
		menu.setMenutypetbl(menuType);
		System.out.println("menu====="+menu.toString());
		
		//获取图片
		FormFile photo=menuForm.getPhoto();
		//如图片不为空，则处理图片信息
		System.out.println("photo:"+photo);
		if(!photo.toString().equals("")){
			String filename = photo.getFileName(); // 文件名
			String newFilename=menuService.getNewFileName(filename);// 使用uuid值作为文件名，防止重复覆盖;
//				System.out.println("filename:::::::::::::::::"+filename);
				newFilename = menuService.getNewFileName(filename);// 使用uuid值作为文件名，防止重复覆盖
			
			int filesize = photo.getFileSize(); // 文件大小，可做上传大小限制
			String filetype = photo.getContentType(); // 文件类型，可做图片类型限制。最好不要通过后缀名判断，通过tomcat下web.xml查询
			// 上传图片
			InputStream is = null;
			OutputStream os = null;
			try {
				is = photo.getInputStream();
				String filepath="F:\\Program Files\\Java\\Myeclipse 10 new\\WirelessOrder\\WebRoot\\images";
				os = new FileOutputStream(filepath + "\\" + newFilename);
				int len = 0;
				byte[] bytes = new byte[1024];
				while ((len = is.read(bytes)) > 0) {
					// 读一点 写出到os一点
					os.write(bytes, 0, len);
				}

			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				try {
					is.close();
					os.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			// 随机生成uuid值作为图片名
			menu.setPic(newFilename);
		}
//		System.out.println("menu====="+menu.toString());
		if(menuService.updMenu(menu)){
			request.setAttribute("menu", menu);
			request.setAttribute("updMenu", "yes");
			request.setAttribute("menutypelist", menuService.getMenuTypeList());
			return mapping.findForward("menuEdit");
		}else{
			request.setAttribute("menu", menuForm);;
			request.setAttribute("menutypelist", menuService.getMenuTypeList());
			return mapping.findForward("menuEdit");
		}
	}
}